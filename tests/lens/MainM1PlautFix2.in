deleteNets *





addNet "m0" -i 3.0 -t 3 CONTINUOUS

addGroup Input0 5 -RESET_ON_EXAMPLE INPUT OUTPUT HARD_CLAMP USE_OUTPUT_HIST -BIASED
addGroup InputMirror0 5 -RESET_ON_EXAMPLE INPUT OUTPUT HARD_CLAMP USE_OUTPUT_HIST -BIASED

addGroup Input1 5 -RESET_ON_EXAMPLE INPUT OUTPUT SOFT_CLAMP USE_OUTPUT_HIST -BIASED
addGroup InputMirror1 5 -RESET_ON_EXAMPLE INPUT OUTPUT SOFT_CLAMP USE_OUTPUT_HIST -BIASED

connectGroups Input1 Input1
connectGroups InputMirror1 InputMirror1

#NEW WAY OF CONNECTING INTERBANK
#FIX INTERBANK UNITS
repeat u [getObj Input1.numUnits] {
   connectUnits Input1:$u InputMirror1:$u -m -.20 -r 0 -b
}
repeat u [getObj Input1.numUnits] {
   connectUnits InputMirror1:$u Input1:$u -m -.20 -r 0 -b
}

#Remove Input->Input self connections
#AND mirror
repeat u [getObj Input0.numUnits] {
  disconnectUnits Input0:$u Input0:$u
}

repeat u [getObj InputMirror0.numUnits] {
  disconnectUnits InputMirror0:$u InputMirror0:$u
}

repeat u [getObj Input1.numUnits] {
  disconnectUnits Input1:$u Input1:$u
}

repeat u [getObj InputMirror1.numUnits] {
  disconnectUnits InputMirror1:$u InputMirror1:$u
}

#CHARACTERISTICS OF NETWORK
setObj Input0.initOutput	  0.0
setObj InputMirror0.initOutput  0.0
setObj Input1.initOutput	  0.0
setObj InputMirror1.initOutput  0.0

setObj Input0.maxOutput	  1.0
setObj InputMirror0.maxOutput  1.0
setObj Input1.maxOutput	  1.0
setObj InputMirror1.maxOutput  1.0

setObj Input0.minOutput	 -0.2
setObj InputMirror0.minOutput  -0.2
setObj Input1.minOutput	 -0.2
setObj InputMirror1.minOutput  -0.2

#BRING IN AGENTS STATE AND PUSH OUTPUT
#EXAMPLE SET FOR AGENT STATE
deleteExampleSets *
loadExamples AgentState.ex -s train -exmode PERMUTED

setObj train.graceTime  3.0
setObj train.minTime    3.0
setObj train.maxTime    3.0

setObj learningRate     0.01
setObj momentum         0.8
setObj clampStrength 	1.0
setObj randRange        0.25

#RESET WEIGHTS
resetNet

#LOAD WEIGHTS
loadWeights AgentWgt.wt

#FREEZE UNITS BETWEEN INPUT AND INPUTMIRROR THEN ASSIGN
#THIS IS IN PLACE FOR THE CASE THAT WE ALLOW LEARNING
freezeWeights -g {InputMirror1} -t Input1
freezeWeights -g {Input1} -t InputMirror1

#NO LEARNING ALLOWED
freezeWeights



#MAKE DATA AND SIMULATE


openNetOutputFile AgentState.out -a
train 1
closeNetOutputFile
#copyUnitValues Input0 -o Input1
#copyUnitValues InputMirror0 -o InputMirror1




#exit
#EOF

#OLD



#LOAD WEIGHTS HERE
#saveWeights wgtInit.w


exit
#EOF
